@model MSI.Models.Fileuploaddetails
@{
    ViewData["Title"] = "ShowuploadDetails";
}
@using System.Text.Encodings.Web

@using System.Collections.Generic
@{
    var docTypeOptions = new List<SelectListItem>
    {
        new SelectListItem { Text = "Reference", Value = "Reference" },
        new SelectListItem { Text = "Controlled", Value = "Controlled" }
    };
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<form asp-action="ShowuploadDetails" method="post" enctype="multipart/form-data">
    <div class="container">
        <section>
            <div class="card">
                <div class="card-title">
                    <div class="card-body">
                        <div class="card-header">
                            <span>File Uploading</span>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 p-2">
                                <label style="padding:1%;">Customer Name</label>
                                <div>
                                    @Html.DropDownListFor(model => model.customerName, Model.lstcustomers, "Select a Customer", new { @id = "ddlcustomid", @class = "form-control" })
                                </div>
                                @Html.HiddenFor(model => model.customid, new { id = "customername" })
                            </div>

                            <div class="col-lg-6 p-2">
                            <label style="padding:1%;">Fg Name</label>
                                <div>
                                    @Html.DropDownListFor(model => model.FgName, Model.lstfgnames, "Select an FG Name", new { @id = "ddlfg", @class = "form-control" })
                                </div>
                                @Html.HiddenFor(model => model.fgid, new { id = "fgname" })
                           
                            </div>
                        </div>




                        <div class="row">
                            <!-- Document ID -->
                            <div class="col-lg-6 p-2">
                                <label style="padding:1%;">Document ID</label>
                                <div>
                                    <input type="text" id="Filenameid" name="Filenameid" class="form-control" placeholder="Provide Document ID" />
                                </div>
                            </div>

                            <!-- File Upload -->
                            <div class="col-lg-6 p-2">
                                <label style="padding:1%;">File Upload</label>
                                <div>
                                    <input type="file" class="form-control" id="files" name="files" accept="application/pdf, video/*" multiple>
                                </div>
                            </div>
                        </div>

                        <!-- Upload Button Positioned to the Right -->
                        <div class="row">
                            <!-- Dropdown Column -->
                            <div class="col-lg-6 p-2">
                                <label style="padding:1%;">Document Type</label>
                                <div>
                                    @Html.DropDownListFor(model => model.docType, docTypeOptions, new { @id = "ddldocType", @class = "form-control" })
                                </div>
                                @Html.HiddenFor(model => model.docType, new { id = "docType" })
                            </div>

                            <!-- Button Column -->
                            <div class="col-lg-6 p-2 d-flex align-items-end">
                                <button id="btnUpload" class="btn btn-primary">Upload</button>
                            </div>
                        </div>

                     
                    </div>
                   @*  <div class="row">
                        <div class="col-lg-0" style="color:green;">
                            @ViewBag.Message
                        </div>
                    </div> *@
                </div>
            </div>
            <div class="search-container" style="margin-bottom: 1%;margin-top:2%">
                <input type="text" id="searchBar" placeholder="Search" class="form-control" style="width: 300px; display: inline-block;">
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="card" style="padding:1%;height:350px;">
                        <div style="height:320px; overflow-y:auto;">
                            <div style="overflow-x:auto;">
                                <table class="table table-bordered w-100" id="tbldocupload">
                                    <thead class="text-center table-primary">
                                        <tr>
                                            <th>Emp ID</th>
                                            <th>Customer Name</th>
                                            <th>Fg Name</th>
                                            <th>Document id</th>
                                            <th>Doc Name</th>
                                            <th>UploadDate</th>
                                            <th>Doc Type</th>
                                            <th>DocStatus</th>
                                            <th>Rejectreason</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model?.lstdocVerifieds?.Count > 0)
                                        {
                                            @foreach (var item in Model.lstdocVerifieds)
                                            {
                                                <tr>
                                                    <td>@item.empId</td>
                                                    <td>@item.customer_name</td>
                                                    <td>@item.Fg_Name</td>
                                                    <td>@item.Filenameid</td>
                                                    <td>@item.docName</td>
                                                    <td>@item.docDateTime</td>
                                                    <td>@item.docType</td>
                                                    <td>@item.docStatus</td>
                                                    <td>@item.Reject_reason</td>
                                                    <td>
                                                        <input type="button" class="btn btn-danger" name="Delete" value="Delete" onclick="deleteValue(@item.docId)" />
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="10" style="text-align:center;">No Data Found</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </section>
    </div>
    <!-- Modal HTML -->
    <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="messageModalLabel">Notification</h5>                 
                </div>
                <div class="modal-body" id="messageContent">
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>
    
</form>
<style>
  .custom-position {
    margin-top: 50px; /* Pushes modal down */
  }
</style>
<script>
    $(document).ready(function () {
        // Auto-search on keyup event
        $('#searchBar').on('keyup', function () {
            var searchQuery = $(this).val().toLowerCase().trim();

            // Hide all rows initially
            $('#tbldocupload tbody tr').hide();

            // Show rows that match the search query
            $('#tbldocupload tbody tr').each(function () {
                var rowText = $(this).text().toLowerCase();
                if (rowText.includes(searchQuery)) {
                    $(this).show();
                }
            });

            // Display a "No matching data" message if no rows are visible
            if ($('#tbldocupload tbody tr:visible').length === 0) {
                $('#tbldocupload tbody').append('<tr><td colspan="10" class="text-center" id="noMatchMsg">No matching data found.</td></tr>');
            } else {
                // Remove the "No matching data" message when results are found
                $('#noMatchMsg').remove();
            }
        });

   
    });
   


    $(document).ready(function () {
        $('#ddlcustomid').prop('selectedIndex', 0); // Ensure the first item is selected
        $('#ddlfg').val('');

        var today = new Date();
        $('#dtVideodate').val(today);

        var day = ("0" + today.getDate()).slice(-2);
        var month = ("0" + (today.getMonth() + 1)).slice(-2);
        var year = today.getFullYear();
        var minDate = year + "-" + month + "-" + day;
        $('#dtVideoDate').attr('min', minDate);
    });

    $('#btnUpload').on('click', function (event) {
        var customer_Name = $('#ddlcustomid option:selected').text(); // Get customer name
        var Fg_Name = $('#ddlfg option:selected').text();
        var folderName = $('#foldername').val();
        var fileidname = $('#Filenameid').val();
        var docType = $('#ddldocType').val();
        var files = $('#files')[0].files;

        if (customer_Name === "Select a Customer" || Fg_Name === "Select an FG Name" || files.length === 0 || fileidname === "" || docType=== "") {
            alert("Please provide a Fg_name and select at least one file ");
            event.preventDefault();
        }

    });

    $('#ddlcustomid').change(function () {
        
        var customerId = $(this).val();
        var selectedText = $("#ddlcustomid option:selected").text(); // Get the selected text

        // Set the selected text into the hidden field bound to the model
        $("#customername").val(selectedText);

        $('#ddlfg').empty();
        $('#ddlfg').append('<option value="">Select an FG Name</option>');

        if (customerId) {
            $.ajax({
                url: '/DocUpload/GetFgNamesByCustomer',
                type: 'GET',
                data: { customerId: customerId },
                success: function (data) {
                    $.each(data, function (index, item) {
                        $('#ddlfg').append('<option value="' + item.value + '">' + item.text + '</option>');
                    });
                },
                error: function () {
                    alert('Error fetching FG Names.');
                }
            });
        }
    });

    $('#ddlfg').change(function () {
        var fgid = $(this).val();
        var fgtext = $("#ddlfg option:selected").text(); // Get the selected text

        // Set the selected text into the hidden field bound to the model
        $("#fgname").val(fgtext);


    })
    function deleteValue(docId) {
        var conf = confirm("Are you sure you want to delete this file?");
        if (conf == true) {
            $.ajax({
                url: '/DocUpload/deleteFileMapping',
                type: 'POST',
                data: { documentId: docId },
                success: function (result) {
                    if (result > 0) {
                        alert('Delete Successfully');
                        window.location.href = '/DocUpload/ShowuploadDetails';
                    } else {
                        alert("Delete Failed");
                    }
                },
                error: function (result) {
                    alert(result);
                }
            });
        }
    }
</script>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var message = '@Html.Raw(JavaScriptEncoder.Default.Encode(ViewBag.Message ?? ""))';
            if (message) {
                $('#messageContent').text(message);
                var modal = new bootstrap.Modal(document.getElementById('messageModal'));
                modal.show();
            }
        });
    </script>
}

<style>
    .btn {
        height: 2em;
        font-family: serif;
    }

    thead th {
        position: sticky;
        top: 0;
        background: #f8f9fa;
        z-index: 2;
    }
</style>
