@model List<DocVerified>
@{
    ViewData["Title"] = "ShowDocDetails";
}

<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</head>
<div class="search-container" style="margin-bottom: 10px;margin-left:1%">
    <input type="text" id="searchBar" placeholder="Search" class="form-control" style="width: 300px; display: inline-block;">
</div>

<section>
    <div class="container-fluid">
        <div class="row ">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header"> <h3>Document Verification</h3></div>
                    <div class="card-body">
                        <div class="container mt-4">
                            <div class="table-responsive table-container border rounded shadow" style="max-height:523px !important">
                                <table class="table table-striped table-bordered" id="tbldocverfied">
                                    <thead class="table-primary">
                                        <tr>
                                            @* <th>ID</th> *@
                                            <th>Emp ID</th>
                                            <th>Documentid</th>
                                            <th>Customer Name</th>
                                            <th>Fg Name</th>
                                            <th>Doc Name</th>
                                            <th>DocDateTime</th>
                                            <th>Doc Type</th>
                                            <th>Doc Status</th>
                                            <th style="display:none;"></th>
                                            <th style="text-align:center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null)
                                        {
                                            @if (Model.Count > 0)
                                            {
                                                @foreach (var item in Model)
                                                {
                                                    <tr file_path="@item.filepath" docid="@item.docId" doc_status="@item.docStatus">
                                                        @* <td>@item.docId</td> *@
                                                        <td>@item.empId</td>
                                                        <td>@item.fileId</td>
                                                        <td>@item.customer_name</td>
                                                        <td>@item.Fg_Name</td>
                                                        <td>@item.docName</td>
                                                        <td>@item.docDateTime</td>
                                                        <td>@item.docType</td>
                                                        <td>@item.docStatus</td>
                                                        <td style="display:none;">
                                                            @item.filepath
                                                        </td>
                                                        <td style="white-space:nowrap">
                                                            <input type="button" class="btn btn-primary ViewDocument" name="View" value="View" id="btnView" />
                                                           @*  <input type="button" class="btn btn-success" name="Download" value="Download" id="btndownload" /> *@
                                                            <input type="button" id="btndownload" class="btn btn-success" value="Download" data-file-name="@Html.Raw(Uri.EscapeDataString(item.filepath))" onclick="downloadFile('@Html.Raw(Uri.EscapeDataString(item.filepath))')"  />
                                                            <input type="button" class="btn btn-danger" name="Delete" value="Delete" onclick="deleteValue(@item.docId)" />
                                                        </td>

                                                    </tr>
                                                }

                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="8" style="text-align:center">No Data Found</td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="8" style="text-align:center">No Data Found</td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="myModalDocView" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content cls">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Document Verified</h5>
                        <input type="hidden" id="hdndocid" />
                        <input type="hidden" id="hdnfilepath" />
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @*  <canvas id="pdfViewer" src="~/datahandling.pdf"></canvas> *@
                        <iframe id="pdfViewer" src=""></iframe>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnApprove" class="btn btn-primary">Approve</button>
                        <button type="button" id="btnReject" class="btn btn-danger">Reject</button>
                        <button type="button" id="btnClose" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="myModalReject" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Reject Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <textarea style="width:100%;height:100px;" id="txtRejectReason"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnSave" class="btn btn-primary">Save</button>
                        <button type="button" id="btnClear" class="btn btn-danger">Clear</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<!-- Status Message Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog  custom-position">
        <div class="modal-content" style="margin-left:35%">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="statusModalLabel">Status</h5>
            </div>
            <div class="modal-body" id="statusModalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<style>
    .table-container {
        max-height: 424px; /* Adjust height as needed */
        overflow-y: auto;
        width: 100%;
    }

    thead th {
        position: sticky;
        top: 0;
        background: #f8f9fa;
        z-index: 2;
    }

    .modal-dialog {
        margin: auto;
    }

    .cls {
        width: 100% !important;
    }

    #pdfViewer {
        height: 30rem;
        width: 100%;
    }

    .card {
        width: 100%;
        margin: 0 auto;
    }

</style>

<script>

        function downloadFile(fileName) {
        // Log the file name to make sure it's passed correctly
        console.log("File to download: " + fileName);

        // Find the button element that was clicked
        var button = event.target;  // `event` will be passed to the function when clicked

        // Disable the button to prevent multiple clicks
        button.disabled = false;

        // Encode the fileName to handle special characters and spaces
        var encodedFileName = encodeURIComponent(fileName);

        // Redirect to the download route
        window.location.href = '/DocVerified/Download?fileName=' + encodedFileName;

    }


      function deleteValue(docId) {
        var conf = confirm("Are you sure you want to delete this file?");
        if (conf == true) {
            $.ajax({
                url: '/DocVerified/deleteFileMapping',
                type: 'POST',
                data: { documentId: docId },
                success: function (result) {
                    if (result > 0) {
                        alert('Delete Successfully');
                        window.location.href = '/DocVerified/ShowDocDetails';
                    } else {
                        alert("Delete Failed");
                    }
                },
                error: function (result) {
                    alert(result);
                }
            });
        }
    }

    $(document).ready(function () {
        // Show modal based on TempData
        var showModal = '@TempData["ShowCustomModal"]';
        if (showModal === 'True') {
            $('#customModal').modal('show');
        }

        // Clear hidden fields on page load
        $('#hdndocid').val('');
        $('#hdnfilepath').val('');

        // Auto-search on keyup event
        $('#searchBar').on('keyup', function () {
            var searchQuery = $(this).val().toLowerCase().trim();

            // Hide all rows initially
            $('#tbldocverfied tbody tr').hide();

            // Show rows that match the search query
            $('#tbldocverfied tbody tr').each(function () {
                var rowText = $(this).text().toLowerCase();
                if (rowText.includes(searchQuery)) {
                    $(this).show();
                }
            });

            // Display "No matching data" message
            if ($('#tbldocverfied tbody tr:visible').length === 0) {
                $('#tbldocverfied tbody').append('<tr><td colspan="10" class="text-center" id="noMatchMsg">No matching data found.</td></tr>');
            } else {
                $('#noMatchMsg').remove();
            }
        });




        // View Document button click
        $('.ViewDocument').click(function () {
            var path = $(this).closest("tr").attr("file_path");
            var did = $(this).closest("tr").attr("docid");
            var doc_status = $(this).closest("tr").attr("doc_status");
            var rootPath = "/videos/";

            $('#hdndocid').val(did);
            $('#hdnfilepath').val(path);

            if (doc_status === "Approve" || doc_status === "Reject") {
                $('#btnApprove').hide();
                $('#btnReject').hide();
            } else {
                $('#btnApprove').show();
                $('#btnReject').show();
            }

            $.ajax({
                url: "/DocVerified/getPdfFileName",
                dataType: 'json',
                data: { filepath: path },
                async: false,
                cache: false,
                success: function (filename) {
                    if (filename === "File Not Found") {
                        alert("File Not Found");
                    } else {
                        $("#pdfViewer").attr("src", rootPath + filename);
                        $("#myModalDocView").modal("show");
                    }
                },
                error: function (xhr) {
                    alert('Error - ' + xhr.statusText);
                }
            });
        });

        // Reject button
        $('#btnReject').click(function () {
            $("#myModalDocView").modal("hide");
            $('#myModalReject').modal('show');
        });

        // Approve button
        $('#btnApprove').click(function () {
            var filepath = $('#hdnfilepath').val();
            var docid = $('#hdndocid').val();

            if (docid) {
                $.ajax({
                    url: '/DocVerified/docStatus',
                    dataType: 'json',
                    data: { Docid: docid, filePath: filepath },
                    cache: false,
                    async: false,
                    success: function (result) {
                        $("#myModalDocView").modal("hide");

                        if (result > 0) {
                            $('#statusModalBody').text("Approved: Status Updated Successfully");
                        } else {
                            $('#statusModalBody').text("Not Updated");
                        }

                        var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                        modal.show();
                        $('#statusModal').on('hidden.bs.modal', function () {
                            window.location.href = "/DocVerified/ShowDocDetails";
                        });
                    },
                    error: function (xhr) {
                        $("#myModalDocView").modal("hide");
                        $('#statusModalBody').text("Error - " + xhr.statusText);
                        var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                        modal.show();
                    }
                });
            } else {
                alert("Document ID is invalid");
            }
        });

        // Save Reject Reason
        $('#btnSave').click(function () {
            var rejectReason = $('#txtRejectReason').val();
            var docid = $('#hdndocid').val();
            var filepath = $('#hdnfilepath').val();

            if (rejectReason && rejectReason.length >= 3) {
                $.ajax({
                    url: '/DocVerified/docRejectStatusUpdate',
                    dataType: 'json',
                    data: {
                        Docid: docid,
                        RejectReason: rejectReason,
                        filePath: filepath
                    },
                    cache: false,
                    async: false,
                    success: function (result) {
                        $('#myModalReject').modal('hide');

                        if (result > 0) {
                            $('#statusModalBody').text("Reject: Status Updated");
                        } else {
                            $('#statusModalBody').text("Not Updated");
                        }

                        var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                        modal.show();
                        $('#statusModal').on('hidden.bs.modal', function () {
                            window.location.href = "/DocVerified/ShowDocDetails";
                        });
                    },
                    error: function (xhr) {
                        $('#myModalReject').modal('hide');
                        $('#statusModalBody').text("Error - " + xhr.statusText);
                        var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                        modal.show();
                    }
                });
            } else {
                $('#statusModalBody').text("Please enter a valid reason (minimum 3 characters).");
                var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                modal.show();
            }
        });

        // Clear reject reason
        $('#btnClear').click(function () {
            $('#txtRejectReason').val('');
        });
    });
</script>
