@model MSI.Models.UploadFileDetails
@{
    ViewData["Title"] = "MasterDetails";
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<form asp-action="MasterDetails" method="post" enctype="multipart/form-data">
    <div class="container">
        <section>
            <!-- Card Start -->
            <div class="card">
                <div class="card-header">
                    <span>File Mapping</span>
                </div>

                <div class="card-body">
                    <!-- Customer & FG Info -->
                    @* <h3 class="text-center">Customer Details</h3> *@

<!-- Row 1: Customer + FG -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Customer Name:</label>
                        @Html.DropDownListFor(model => model.approvecustomid, Model.lstapprovecustomers, "Select a Customer", new { @id = "ddlapovcustomer", @class = "form-control" })
                        @Html.HiddenFor(model => model.approvedcustname, new { id = "custname" })
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold">FG No:</label>
                        @Html.DropDownListFor(model => model.approvefgid, Model.lstapprovefgnames, "Select an FG Name", new { @id = "ddlapovfg", @class = "form-control" })
                        @Html.HiddenFor(model => model.approvedfgname, new { id = "Fgname" })
                    </div>
                </div>

                <!-- Row 2: File + View -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label fw-bold">Filename:</label>
                        @Html.DropDownListFor(model => model.approvefileid, Model.lstFile, "Select File", new { @id = "ddlfile", @class = "form-control" })
                        @Html.HiddenFor(model => model.approvefileid, new { id = "Filename" })
                    </div>
                    <div class="col-md-6 d-flex align-items-end">
                        <button id="btnview" class="btn btn-primary ViewDocument">View</button>
                    </div>
                </div>


                    <!-- Stage -->
                    <div class="row">
                        <div class="col-lg-6 mb-3">
                            <label class="form-label fw-bold">Stage Name</label>
                            @Html.DropDownListFor(model => model.systemid, Model.lstSystem, "Select Stage", new { @id = "ddlsystem", @class = "form-control" })
                        </div>
                    </div>

                    <!-- Modal to View PDF -->
                    <div class="modal fade" id="myModalDocView" tabindex="-1">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Document Verified</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <iframe id="pdfViewer" width="100%" height="500px"></iframe>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Upload Section -->
                    <div class="row mt-4">
                        <div class="col-lg-6">
@*                             <h5>File Upload</h5>

                            <div class="mb-3">
                                <input type="file" class="form-control" id="file" name="file" accept="video/*,application/pdf">
                            </div> *@

                            <div class="row g-2">
                                <div class="col-md-3">
                                    <label>Video Date</label>
                                    <input type="date" id="dtVideoDate" asp-for="VideoDate" class="form-control" />
                                </div>
                                <div class="col-md-3">
                                    <label>From Time</label>
                                    <input type="time" id="dtFromTime" asp-for="VideoFromTime" class="form-control" />
                                </div>
                                <div class="col-md-3">
                                    <label>To Time</label>
                                    <input type="time" id="dtToTime" asp-for="VideoToTime" class="form-control" />
                                </div>
                                <div class="col-md-3 d-flex align-items-end">
                                    <button id="btnUpload" class="btn btn-primary">Upload</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- ViewBag Message -->
                    <div class="row mt-3">
                        <div class="col-lg-12 text-success">
                            @ViewBag.Message
                        </div>
                    </div>
                </div>
            </div>
            <!-- Card End -->

            <!-- File Mapping Table -->
            <div class="card mt-3" style="height:350px;">
                <div class="tab-content" style="height:320px;overflow:auto;">
                    <table class="table table-bordered table-responsive">
                        <thead class="text-center">
                            <tr>
                                <th>System ID</th>
                                <th>System Name</th>
                                <th>File Path</th>
                                <th>Date</th>
                                <th>From Time</th>
                                <th>To Time</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody style="white-space:nowrap;">
                            @if (Model?.lstFileMappings != null && Model.lstFileMappings.Any())
                            {
                                foreach (var item in Model.lstFileMappings)
                                {
                                    <tr>
                                        <td>@item.systemid</td>
                                        <td>@item.systemname</td>
                                        <td>@item.filepath</td>
                                        <td>@item.videoDate</td>
                                        <td>@item.fromtime</td>
                                        <td>@item.totime</td>
                                        <td>
                                            <button class="btn btn-outline-secondary" onclick="updateValue(@item.systemid)">Edit</button>
                                            <button class="btn btn-danger" onclick="deleteValue(@item.systemid, '@item.videoDate', '@item.fromtime', '@item.totime')">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center">No Data Found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>

    <!-- Status Modal -->
    <div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-position">
            <div class="modal-content" style="margin-left:35%">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Status</h5>
                </div>
                <div class="modal-body" id="statusModalBody"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
                </div>
            </div>
        </div>
    </div>
</form>

<!-- JS Section -->
@section Scripts {
<script>
    $(function () {
        // Set default video date to today
        const today = new Date().toISOString().split("T")[0];
        $('#dtVideoDate').val(today).attr('min', today);

        // Populate FG list based on customer
        $('#ddlapovcustomer').change(function () {
            const customerId = $(this).val();
            const customerText = $("#ddlapovcustomer option:selected").text();
            $("#custname").val(customerText);

            $('#ddlapovfg').empty().append('<option value="">Select an FG Name</option>');

            if (customerId) {
                $.get('/Master/GetFgNamesByCustomer', { customerId }, function (data) {
                    $.each(data, function (index, item) {
                        $('#ddlapovfg').append(`<option value="${item.value}">${item.text}</option>`);
                    });
                }).fail(() => alert('Error fetching FG Names.'));
            }
        });

        // Load files based on FG
        $('#ddlapovfg').change(function () {
            const fgid = $(this).val();
            const fgidText = $("#ddlapovfg option:selected").text();
            $("#Fgname").val(fgidText);

            $('#ddlfile').empty().append('<option value="">Select a File Name</option>');

            if (!fgid) {
                alert("Please provide an FG name.");
                return;
            }

            const customerText = $("#ddlapovcustomer option:selected").text();
            $.get('/Master/GetFgNames', { customerId: customerText, fgid: fgidText }, function (data) {
                $.each(data, function (index, item) {
                    $('#ddlfile').append(`<option value="${item.value}">${item.text}</option>`);
                });
            }).fail(() => alert('Error fetching File Names.'));
        });

        // View document
        $('.ViewDocument').click(function (e) {
            e.preventDefault();

            const fileid = $("#ddlfile").val();
            $("#Filename").val(fileid);
            const rootPath = "/videos/";

            $.getJSON("/Master/getPdfFileName", { fileid }, function (filename) {
                if (filename === "File Not Found") {
                    alert("File Not Found");
                } else {
                    $("#pdfViewer").attr("src", rootPath + filename);
                    $("#myModalDocView").modal("show");
                }
            }).fail(xhr => alert('Error - ' + xhr.statusText));
        });

        // Validate before upload
            $('#btnUpload').click(function (e) {
                debugger;

                var custname = $('#ddlapovcustomer option:selected').text();
                console.log(); // <-- this is broken! should be console.log(custname)

                var fgname = $('#ddlapovfg option:selected').text();
                const system = $('#ddlsystem').val();
                const file = $('#ddlfile').val();
                const date = $('#dtVideoDate').val();
                const from = $('#dtFromTime').val();
                const to = $('#dtToTime').val();

                if (!custname || !fgname || !system || !file || !date || !from || !to) {
                    alert("Please fill all fields before upload.");
                    e.preventDefault();
                }
            });

    });

    function updateValue(sysid) {
        $('#ddlsystem').val(sysid);
    }

    function deleteValue(systemid, date, from, to) {
        $.post('/Master/deleteFileMapping', {
            systemid,
            videoDate: date,
            fromtime: from,
            totime: to
        }, function (result) {
            if (result > 0) {
                alert('Deleted successfully');
                location.reload();
            } else {
                alert("Not Deleted");
            }
        }).fail(xhr => alert('Error: ' + xhr.responseText));
    }
</script>
}

<style>
    .btn {
        height: 2em;
        font-family: serif;
    }
</style>
